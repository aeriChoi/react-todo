{"version":3,"sources":["store/todos/todosSlice.js","commonness/styled/styled.js","commonness/styled/animate.js","commonness/styled/layout.js","commonness/Func/isBefore.js","constants/forms.js","components/ToDo/Form.jsx","commonness/Func/getDate.js","components/ToDo/ListItem.jsx","components/ToDo/ToDoContainers.jsx","components/App.jsx","store/reducers/index.js","index.jsx"],"names":["todosSlice","createSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addTodo","state","action","payload","id","title","description","rank","date","push","completed","setItem","stringify","toggleTodo","todo","todos","find","removeTodo","filter","toDo","actions","GlobalStyle","createGlobalStyle","animateCSS","css","animateViewShow","StyledLayout","styled","article","FormWrapper","section","ListWrapper","ul","ListsItem","li","ItemTextBox","p","Title","header","isBefore","type","undefined","getDay","moment","format","getDiffDay","fromNow","getTime","getDiffTime","isBeforeDay","includes","console","log","isBeforeTime","layout","labelCol","span","wrapperCol","tailLayout","offset","config","rules","Forms","memo","toDos","addToDo","onChange","Form","useForm","form","useState","toDoItem","setToDoItem","onReset","resetFields","onFinish","values","getDates","getDate","item","valueOf","alert","Item","label","initialValue","required","message","placeholder","Group","value","disabledDate","current","endOf","showTime","defaultValue","htmlType","connect","dispatch","ListItem","data","removeToDo","className","onClick","ToDoContainers","loaded","setState","useEffect","length","map","App","combineReducers","todosReducer","store","configureStore","reducer","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38ed8c53.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState: JSON.parse(localStorage.getItem('todos')) || [],\n  reducers: {\n    addTodo: (state, action) => {\n      const { id, title, description, rank, date } = action.payload\n      state.push({\n        id: id,\n        title: title,\n        description: description,\n        rank: rank,\n        date: date,\n        completed: false,\n      })\n      localStorage.setItem('todos', JSON.stringify(state))\n    },\n    toggleTodo: (state, action) => {\n      const { id } = action.payload\n      const todo = state.todos.find(todo => todo.id === id);\n      if (todo) {\n        todo.completed = !todo.completed;\n        localStorage.setItem('todos', JSON.stringify(action.payload))\n      }\n    },\n    removeTodo: (state, action) => state.filter(toDo => toDo.id !== action.payload)\n  }\n});\n\nexport const { addTodo, toggleTodo, removeTodo } = todosSlice.actions\n\nexport default todosSlice.reducer","import {createGlobalStyle} from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n:root{\n   --color-sunFlowerYellow: #ffd200;\n   --color-darkBrown: #5e5050;\n   --color-coralRed: #ff4d56;\n   --color-Grey: #777777;\n   --color-borderGrey: #e5e5e5;\n   --color-blue: #1890ff;\n   --color-green: #71d271;\n}\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video, button{\n   margin: 0;\n   padding: 0;\n   border: 0;\n   font-size: 100%;\n   font: inherit;  \n   letter-spacing: 0.2px;\n   font-family: HelveticaNeue, sans-serif;\n   vertical-align: baseline;\n   box-sizing: border-box;  \n}\n\nhtml{\n  -webkit-touch-callout:none;\n  -webkit-user-select:none;\n  -webkit-tap-highlight-color:rgba(255, 255, 255, 0.4);\n  scroll-behavior:smooth;\n}\n\nbody{\n  line-height: 1;  \n  width: 100%;\n  background-color: #2193b0;\n  -webkit-text-size-adjust: none;\n}\n\nol, ul{\n   list-style: none;\n}\n\nblockquote, q{\n   quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after{\n   content: '';\n   content: none;\n}\n`;\n","import {css} from \"styled-components\";\n\nconst animateCSS = css` \n  animation-duration: 0.4s;\n  animation-fill-mode: forwards; \n  transform: translateY(0px);\n`;\n\nexport const animateViewDownShow = css`    \n  display: block;\n  animation-name: animateViewDownShow;\n  opacity: 0;    \n  animation-duration: 0.4s;\n  animation-fill-mode: forwards;  \n    \n  @keyframes animateViewDownShow {\n   from {       \n     opacity: 0;\n     transform: translateY(-30px);\n   }\n  \n   to {        \n     opacity: 1;        \n     transform: translateY(0);\n   }\n  }\n`;\n\nexport const animateViewShow = css`    \n  display: block;\n  animation-name: slideUpList;\n  opacity: 1;\n  height: auto;\n  ${animateCSS}  \n  \n  @keyframes slideUpList {\n   from {       \n     opacity: 0;\n     transform: translateY(-10px);\n   }\n  \n   to {        \n     opacity: 1;        \n     transform: translateY(0);\n   }\n  }\n`;","import styled from \"styled-components\";\nimport {animateViewShow} from './animate';\n\nexport const StyledLayout = styled.article`\n  width: 80%;\n  max-width: 760px;\n  min-width: 280px;\n  margin:  30px auto;\n  padding: 20px 15px;\n  border-radius: 8px;\n  background-color: #fff;\n  box-shadow: 0px 12px 40px rgba(0,0,0,0.5);\n  \n  .ant-form-item-label {\n    text-align: left;\n  }\n  \n  .ant-btn-primary {\n    display: block;\n    width: 80%;\n    height: 50px;\n    margin: 0 auto;\n    border: 0;\n    border-radius: 25px;\n    font-size: 16px;\n    font-weight: 600;\n    background: linear-gradient(269.43deg, #3B5BC2 0%, #417FE9 100%);\n  }\n  ${animateViewShow}\n`;\n\nexport const FormWrapper = styled.section`\n  max-width: 460px;\n  margin: 0 auto;\n`;\n\nexport const ListWrapper = styled.ul`\n  margin: 30px auto;\n`;\n\nexport const ListsItem = styled.li`\n  margin: 15px auto;\n  padding: 10px 20px ;\n  border-right: 15px;\n  box-shadow: 0px 12px 20px rgba(0,0,0,0.5);\n`;\n\nexport const ItemTextBox = styled.p`\n  margin-bottom: 15px;\n \n  \n  &.title {\n    color: #333;\n    font-size: 18px;\n    font-weight: 700;\n  }\n  \n  &.des {\n    color: #999;\n    font-size: 14px;\n  }\n  \n  &.deadline {\n    color: var(--color-coralRed);\n    font-size: 12px;\n  }\n`;\n\nexport const Title = styled.header`\n  h1 {\n    margin-bottom: 20px;\n    color: #000;\n    font-size: 25px;\n    font-weight: 700;\n    text-align: center;\n    line-height: 36px;\n  }\n`;","import moment from \"moment\";\n\nexport const isBefore = (type, date) => {\n  if (date !== undefined) {\n    const getDay = moment(date).format(\"YYYY-MM-DD\");\n    const getDiffDay = moment(getDay, \"YYYY-MM-DD\").fromNow();\n    const getTime = moment(date).format(\"HH:mm\");\n    const getDiffTime = moment(getTime, \"HH:mm\").fromNow();\n\n    switch (type) {\n      case 'day':\n        const isBeforeDay = getDiffDay.includes('ago');\n        console.log('isBeforeDay', isBeforeDay);\n        return isBeforeDay\n      case 'time':\n        const isBeforeTime = getDiffTime.includes('ago');\n        console.log('isBeforeTime', isBeforeTime);\n        return isBeforeTime\n      default:\n        return false;\n    }\n  } else {\n    return false;\n  }\n};\n","export const layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nexport const tailLayout = {\n  wrapperCol: {\n    offset: 0,\n    span: 24,\n  },\n};\n\nexport const config = {\n  rules: [\n    {\n      type: 'object',\n    },\n  ],\n};","import React, {memo,useState} from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../../store/todos/todosSlice';\nimport moment from 'moment';\nimport {Form, Input, Button, DatePicker, Radio} from 'antd';\nimport {getDate, isBefore} from '../../commonness';\nimport {layout, tailLayout, config} from '../../constants';\n\nconst Forms = memo(({toDos, addToDo, onChange}) => {\n  const [form] = Form.useForm();\n  const [toDoItem, setToDoItem] = useState({\n    id: '',\n    title: '',\n    description: '',\n    rank: '',\n    date: '',\n  });\n\n  const disabledDate = (current) => {\n    return current && current < moment().endOf('day');\n  }\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFinish = (values) => {\n    const {title, description, rank, date} = values;\n    const getDates = getDate(date);\n    const isBeforeDay = isBefore('day', date);\n    const isBeforeTime = isBefore('time', date);\n\n\n\n    const item = {\n      id: moment().valueOf(),\n      title: title,\n      description: description,\n      rank: rank,\n      date: getDates,\n    };\n\n    if ( isBeforeDay && isBeforeTime) {\n      alert(`현재 시간보다 이전 시간은 선택할 수 없습니다.\\n선택 시간을 다시 확인 해주세요.`);\n      onChange(false);\n      onReset();\n      return\n    }\n    if ((!isBeforeDay && !isBeforeTime) || (!isBeforeDay && isBeforeTime)) {\n      setToDoItem({...item});\n      addToDo(item);\n      setToDoItem({\n        id: '',\n        title: '',\n        description: '',\n        rank: '',\n        date: '',\n      });\n      onChange(true);\n      onReset();\n    }\n  };\n\n  return (\n    <Form\n      {...layout}\n      form={form}\n      name=\"control-forms\"\n      onFinish={onFinish}\n    >\n      <Form.Item\n        label=\"제목\"\n        name=\"title\"\n        rules={[\n          {\n            initialValue: toDoItem.title || '',\n            required: true,\n            message: '제목을 입력해 주세요.',\n          },\n        ]}\n      >\n        <Input placeholder=\"제목을 입력해주세요.\"/>\n      </Form.Item>\n      <Form.Item\n        label=\"상세내용\"\n        name=\"description\"\n        rules={[\n          {\n            initialValue: toDoItem.description || '',\n            required: true,\n            message: '내용을 입력해 주세요.',\n          },\n        ]}\n      >\n        <Input placeholder=\"내용을 입력해주세요.\"/>\n      </Form.Item>\n      <Form.Item\n        name=\"rank\"\n        label=\"우선순위\"\n        rules={[\n          {\n            initialValue: toDoItem.rank || '',\n            required: true,\n            message: '우선순위를 설정해주세요.',\n          },\n        ]}\n      >\n        <Radio.Group>\n          <Radio value=\"top\">상</Radio>\n          <Radio value=\"middle\">중</Radio>\n          <Radio value=\"low\">하</Radio>\n        </Radio.Group>\n      </Form.Item>\n\n      <Form.Item name=\"date\" label=\"마감 기한\" {...config}>\n        <DatePicker\n          format=\"YYYY-MM-DD HH:mm\"\n          disabledDate={disabledDate}\n          showTime={{defaultValue: moment('00:00', 'HH:mm')}}\n        />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          추가하기\n        </Button>\n      </Form.Item>\n\n    </Form>\n  );\n});\n\nconst mapStateToProps = (state) => {\n  return { toDos: state };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addToDo: item => dispatch(addTodo(item))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forms);\n","import moment from \"moment\";\n\nexport const getDate = (date) => {\n  if (date !== undefined) {\n    const selectedDate = moment(date).format('YYYY-MM-DD HH:mm');\n    return selectedDate;\n  } else {\n    return '';\n  }\n};\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport {removeTodo} from '../../store/todos/todosSlice';\nimport {ListsItem, ItemTextBox} from '../../commonness';\n\nconst ListItem = memo(({data, removeToDo}) => {\n\n  const onRemove = () => {\n    removeToDo(data);\n  };\n\n  return (\n    <ListsItem className={`${data.rank}`}>\n      <ItemTextBox className=\"title\">{data.title}</ItemTextBox>\n      <ItemTextBox className=\"des\">{data.description}</ItemTextBox>\n      <ItemTextBox className=\"deadline\">{data.date}</ItemTextBox>\n      <button onClick={onRemove}>삭제</button>\n    </ListsItem>\n  );\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeToDo: item => dispatch(removeTodo(item))\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(ListItem);","import React, { memo, useEffect, useState } from 'react';\nimport Forms from './Form';\nimport ListItem from './ListItem';\nimport {FormWrapper, ListWrapper, Title} from '../../commonness';\nimport {connect} from \"react-redux\";\n\nconst ToDoContainers = memo(({toDos}) => {\n  const [state, setState] = useState({\n    loaded: false,\n    toDos: toDos,\n  });\n\n  const onChange = (value)=> {\n    if (value) {\n      setState({\n        loaded: true,\n        toDos: JSON.parse(localStorage.getItem('todos')),\n      })\n    }\n  };\n\n  useEffect(() => {\n    setState({\n      loaded: true,\n      toDos: JSON.parse(localStorage.getItem('todos')) || [],\n    })\n  }, [state.loaded]);\n\n  return (\n    <>\n      <Title>\n        <h1>TO-DO</h1>\n      </Title>\n      <FormWrapper>\n        <Forms onChange={onChange}/>\n      </FormWrapper>\n      <ListWrapper>\n        {state.toDos && state.toDos.length > 0 && state.toDos.map(toDo => {\n          return (\n            <ListItem key={toDo.id} data={toDo} />\n          )\n        })}\n      </ListWrapper>\n    </>\n  );\n});\n\nconst mapStateToProps = (state) => {\n  return { toDos: state };\n}\n\nexport default connect(mapStateToProps, null)(ToDoContainers);","import React, {memo} from 'react';\nimport ToDoContainers from './ToDo/ToDoContainers';\nimport {StyledLayout} from '../commonness';\n\nexport const App = memo(() => {\n\n  return (\n    <StyledLayout>\n      <ToDoContainers/>\n    </StyledLayout>\n  );\n});\n","import { combineReducers } from 'redux';\nimport todosReducer from '../todos/todosSlice';\n\nexport default combineReducers({\n  todos: todosReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components';\nimport {GlobalStyle} from './commonness';\nimport 'antd/dist/antd.css';\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = configureStore({reducer: rootReducer});\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle/>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}