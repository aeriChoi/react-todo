{"version":3,"sources":["components/App.jsx","store/actions/todo.action.js","store/reducers/todo.reducers.js","store/reducers/index.js","index.jsx"],"names":["LayoutWrapper","styled","div","App","memo","className","ADD_TODO","todos","createAction","type","createReducer","handleAction","actions","state","action","produce","draft","payload","combineReducers","middleware","applyMiddleware","thunkMiddleware","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"0TAGA,IAAMA,E,MAAgBC,EAAOC,IAAV,KAONC,EAAMC,gBAAK,WAEtB,OACE,cAACJ,EAAD,CAAeK,UAAU,MAAzB,6B,uDCTSC,EAAW,WCKXC,GDHiBC,YAAaF,GAAU,SAACC,GAAD,IAAQE,EAAR,uDAAe,MAAf,MAA0B,CAAEF,QAAOE,UAA1DD,GCGTE,wBALO,CAC1BH,MAAO,GACPE,KAAM,KAILE,aAAaC,GAAkB,SAACC,EAAOC,GAAR,OAC9BC,YAAQF,GAAO,SAACG,GAAW,IAAD,EACFF,EAAOG,QAAtBV,EADiB,EACjBA,MAAOE,EADU,EACVA,KACdO,EAAMT,MAAQA,EACdS,EAAMP,KAAOA,SCVJS,4BAAgB,CAC7BX,UCKIY,EAAaC,0BAAgBC,KAC7BC,EAAQC,sBAAYC,EAAaC,8BAAoBN,IAE3DO,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAACnB,EAAD,MAEFyB,SAASC,eAAe,W","file":"static/js/main.4134f577.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  min-width: 280px;\n  margin: 0 auto;\n  padding: 20px 16px;\n`;\n\nexport const App = memo(() => {\n\n  return (\n    <LayoutWrapper className=\"App\">\n      하이\n    </LayoutWrapper>\n  );\n});\n","import { createAction } from 'redux-actions';\n\n/** Action Types */\n// todo 등록\nexport const ADD_TODO = \"ADD_TODO\";\n\nexport const handleAddTodos = createAction(ADD_TODO, (todos, type = 'add') => ({ todos, type }))();","import {createReducer} from 'typesafe-actions';\nimport produce from 'immer';\nimport * as actions from '../actions/todo.action';\n\nexport const initialState = {\n  todos: [],\n  type: '',\n};\n\nexport const todos = createReducer(initialState)\n  .handleAction(actions.ADD_TODO, (state, action) =>\n    produce(state, (draft) => {\n      const {todos, type} = action.payload;\n      draft.todos = todos;\n      draft.type = type;\n    })\n  );","import { combineReducers } from 'redux';\n\nimport {todos} from './todo.reducers';\n\nexport default combineReducers({\n  todos,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './store/reducers';\n\nconst middleware = applyMiddleware(thunkMiddleware);\nconst store = createStore(rootReducer, composeWithDevTools(middleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}